// <auto-generated />
using System;
using BadanieKrwi.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BadanieKrwi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240522152219_DodanieIdUzytkownikaDoBadan")]
    partial class DodanieIdUzytkownikaDoBadan
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BadanieKrwi.Models.BadanieModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Bazofile")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataBadania")
                        .HasColumnType("datetime2");

                    b.Property<int>("Eozynofile")
                        .HasColumnType("int");

                    b.Property<int>("HematokrytHtc")
                        .HasColumnType("int");

                    b.Property<int>("HemoglobinaHb")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUzytkownika")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Limfocyty")
                        .HasColumnType("int");

                    b.Property<double>("Magnez")
                        .HasColumnType("float");

                    b.Property<int>("Monocyty")
                        .HasColumnType("int");

                    b.Property<string>("NazwaKliniki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Neutrofile")
                        .HasColumnType("int");

                    b.Property<int>("PlytkiKrwiPlt")
                        .HasColumnType("int");

                    b.Property<double>("RetikulocytyRc")
                        .HasColumnType("float");

                    b.Property<double>("RozpietoscRozkladuObjetosciErytrocytowRdwCw")
                        .HasColumnType("float");

                    b.Property<double>("SredniaMasaHemoglobinyWErytrocycieMch")
                        .HasColumnType("float");

                    b.Property<double>("SredniaObjetoscErytrocytuMcv")
                        .HasColumnType("float");

                    b.Property<double>("SredniaObjetoscKrwiMpv")
                        .HasColumnType("float");

                    b.Property<double>("SrednieStezenieHemoglobinyWErytrocytachMchc")
                        .HasColumnType("float");

                    b.Property<int>("StezenieErytrocytowRbc")
                        .HasColumnType("int");

                    b.Property<int>("StezenieLeukocytowWbc")
                        .HasColumnType("int");

                    b.Property<string>("TypBadania")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Zelazo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Badania");
                });

            modelBuilder.Entity("BadanieKrwi.Models.Database.Uzytkownik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataRejestracji")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasloHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wiek")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownik");
                });

            modelBuilder.Entity("BadanieKrwi.Models.KalendarzBadanModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CzyUstawionoPrzypomnienie")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataBadania")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdKliniki")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUzytkownika")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tresc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypBadania")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kalendarz");
                });

            modelBuilder.Entity("BadanieKrwi.Models.Klinika", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Informacja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaITelefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kliniki");
                });
#pragma warning restore 612, 618
        }
    }
}
